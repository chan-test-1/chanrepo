수학은 문제를 풀어야 답이나온다.

프로그래밍의 장점은 결과값이 나와있고 그값을 구하기 위해 연산하는 것이다 ! (아래에서 위로!) 
프로그래밍 기본 상식!

1나누기 3을 할지 1더하기 3을 할지는 답을 보고 개발자가 판단해야하는것!

연산이 끝나면 출력한다 (이미 알고 있는 답.)

----------------------------------------------

자바스크립트


1994년 ---> LiveScript ---> JavaScript
HTML/CSS만으로 웹 페이지를 만드는 것은 좋은 사용자 경험을 제공할 수 없었음
자바스크립트는 웹 페이지를 동적으로 움직이게 만ㄷ르기 위해 개발된 언어


전세계 언어 만족도 순위?

Rust (c대용)
Go (해외 자바스크립트)
Python (AI)
TypeScript(JavaScript)

오늘 날에 이르러서는 단순히 웹 페이지를 움직이는 것 뿐만 아니라, 백엔드 서버를 제작하거나
모바일 어플리케이션 개발에 사용되는 등 다양하게 활용.

프로그래밍 - 문제해결
"자바스크립트 기능을 정의하는 주체는 나 자신 "

~하는 법 (X) -> 게시판 만드는 법 (X) 이런게 없다.

어떻게 생각하고 해결해야되는지가 초점! 

사고능력 향상!

지금부터는 공부시간 한두시간 더 늘린다고 생각해야된다. 부족하다 공부시간. 자바스크립트는 계속 뭔가 할게 생길거다!
--------------------------------------------


왜 동적으로 만들기위해 자바스크립트가 도입되었을까?

사용자가 버튼을 클릭했을 때 메뉴가나오고 ! 데이터가 들어오고 ! 화려하고 효율적으로 만들고싶었던거야!

옛날에는 동적으로 만들기위한 언어였지만

지금 자바스크립트는 구글이 밖으로 꺼내오면서 모바일, 백엔드까지 포괄적인 역할을 하고있다.(유일하다. 3가지 다 되는 언어는.)


-----------------------------------------------------

강의 순서.
1. 프로그램 기본 문법
2. 돔(DOM) 이벤트 -- html에 접근하는 이벤트
3. 백엔드 서버와 연결해서 데이터 요청/응답
4. 게시판 만들기 (CRUD 서버없이 클라이언트 사이드(프론트에서만)에서만 진행)

----------------------------------------------------
1 + 2  ->       2라는 값이 재사용이 필요하다면 별칭을 주는게 편하지 않겠어?

변수/상수
반복 및 재사용되는 값을 컴퓨터에게 기억.

앞으로 숫자2는 현재 달수라고 가정했을 때 CurrentMonth 라고 할 수 있지않겠어? 읽기도 좋구?
별칭을 부여하므로 의미 부여!

숫자2라고 쓰면 나만알지 누가알겠어? CurrentMonth라고 쓰면 아 현재 월이 2월이구나. 

결론 
-"컴퓨터에게 기억시킨다."
-"의미 부여"

----------------------------------------------------

변수(변하는 값),  
(변수에서 수의 의미는 숫자다. 컴퓨터는 다 0 또는 1로 이해하기떄문.)

month = 2
month = 3

let 변수명; (선언)
변수명 = 값 (할당)
변수명 (사용)

let 변수명(별칭) = 값 (선언 및 할당)
변수명 = 새로운 값 (재할당, 초기화)

수정이 아니라 재할당, 초기화라 부르는이유 : let a = 5 -> a = 6      a는 5라는 데이터를 바라보다가 5가담긴 저장소를 파기하고 6으로 화살표를 돌림.

값을 수정하는게 아니라 재할당, 초기화 라고 개념만.  가리키다 라고 생각해도되고. 뭐 수정하다라고 생각해도 지금은 문제가없다.



---------------------------------------------------

상수 (항상 같은 값)
"바뀌지 않는 값
"1회만 사용되는 값"

month = 2
month = 3 (x)

휴먼에러 방지(사용자 오조작하여 일어나는 에러.)

(constant(변함없는)의 줄임말)

const 상수명 = 값; (선언, 할당) 
값이 바뀌지 않기때문에 선언 및 할당을 한번에해야하고 고치지 못한다.


---------------------------------------------------

자바스크립트의 값에는 자료형(데이터의 타입)

이 자료형이 있어야 연산을 한다 !
문자 + 숫자? 
undefined + 문자?

java) - 정적 자료형 언어 - 컴파일 환경에서 에러가 발생 ( 코드 작성 중 )
int a = 5 ;

JavaScript) - 동적 자료형 언어 - 런타임 환경에서 에러가 발생 (실행 할 때.)
let a = 5;
a = '안녕하세요'

자바스크립트가 더 좋네?
아니다.
에러가 안나온다. 
자바스크립트는 열어놨다.

TypeScript) - 동적 자료형 언어인 자바스크립트를 정적 자료형으로 바꿔주는 언어.

let a:number = 3
a = "안녕하세요" (error)

타입스크립트 마지막달에 한다.
타입스크립트가 나온이유는 열려있는 자바스크립트를 좀 더 안정적이게 사용하려고.
자바스크립트랑 거의 동일한 언어.
이런걸 spuerSet(확대집합)이라 한다. js 를 포함하고있는 언어 (react, TypeScript, next.js)


-------------------------------

자바스크립트가 동적인 자료형을 갖고있다고해서 자료형이 없는건 아니다.

let a = 3 ; 하면 숫자로 인식하고
a = "안녕하세요" 문자로 바뀐다.

동적 자료형이라 바뀌는거지 없는건아니다 !!


--원시타입
number // 숫자
boolean // true, false
string // 문자
undefined // 값이 정의되지 않은 상태
null // 값이 비었다고 정의한 상태
symbol // 다른값과 비교되는 고유한 값



--객체타입 : 값을 여러개 가지고 있는 것 
object (원시타입이 아닌건 모두 객체 타입)
ex) 변수하나에 여러가지 정보
김성용
나이 : 20살
키 : 190cm
취미 : 코딩

object
Array
map
set
여기는 지금은 몰라도된다. 하지만 자바스크립트가 자료형이 있다는것만은 알고있어라!
---------------------------------------------

입출력

prompt() - 사용자가 값을 입력하게하는 대화상자
console - 값을 출력하여 사용자에게 보여주기 위한 로그 객체 
console.log()
console.wran()  - 노란글씨
console.error() - 빨강
console.info()  - 진한
console.debug() - 파란

자바스크립트 웹 사이트를 제작하기 위한 언어이기도 함.
브라우저 환경에서는 console은 사용자를 위한 용도가 아니라 개발자를 위한 용도로 사용 ( 사용자가 즉 개발자란거다! )

** 디버깅 **
버깅 = 버그. (벌레)

컴퓨터크기가 옛날에는 엄청 컸다. 
그컴퓨터를 사용하는데 오류가 났다. 알고보니 벌레하나가 들어간것.
어 그 벌레가 어디에 침투했지? 를 찾다가 유래된것.

에러를 찾아내는 과정 ! 디버깅 !

현재는 컴퓨터에서 치명적인 에러가 발생했을 때 해당 에러를 찾아가는 과정 (디버깅)

console 디버깅 할때 내 값이 잘 나오는지 확인하기위해 많이쓴다.

10번째 줄에 a라는 변수가 사용되는데 이때 반드시 a=9여야 정상 작동.

9번째 줄에 console.log(a)를 출력하여 9가 정상적으로 전달되었는지 확인 !

""값이 정상적으로 전달되었는지 개발자가 눈으로 확인하기 위해 출력""

항상 찾아오기전에 콘솔찍어보고 오는 습관! 남이해결해주기를 바라지마라.

-->  (기본적으로 자바스크립트가 에러문구를 토해내기는 한다(몇번째줄까지))

또하나의 예를 들면 코드가 10줄의 코드가 존재 -> 에러가 발생
여러분이 발생했을 것 같은 지점에 console.log("아무런텍스트")
6번째줄에 console.log() 정상 출력
9번째줄에서 console.log() 출력 X
6~9번째 줄 사이에 버그 존재.

""버그가 발생한 지점을 좁히기위해 사용하기도 함!""

--------------------------------------------


nodeJs (설치)
자바스크립트 ---> 브라우저에서만 실행된다. (chrome, edge)
브라우저 엔진에서만 실행되는 자바스크립트를 브라우저가 아닌 환경에서도 사용할 수 있도록 하는 런타임(환경)

구글에 nodejs 치면 나온다.
https://nodejs.org/en/download/package-manager

터미널에 node -v 쳐서 버전나오면 설치 완료된 것

-------------------------------------------------------------
순서.
--변수--
여기서부터 var.js 에서 설명하고 진행.
--출력--
console.js 
--html 과 자바스크립트 --
console.html
-------------------------------------------------------------


--제어문 (실행을 개발자가 제어한다)
A라는 조건에는 실행하지 않고 B라는 조건일 때만 실행한다.
A라는 조건에는 "A"를 출력하고 B라는 조건에 "B"를 출력한다.

특정 조건에 의해서 실행 여부/연산을 개발자가 제어할 수 있도록하는 문법

if(만약), switch(중에 하나)

control.js 로 ~~

끝나면

q1.js 로 ~

